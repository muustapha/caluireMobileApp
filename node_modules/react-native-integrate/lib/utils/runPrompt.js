"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getValidate = exports.runPrompt = void 0;
const prompter_1 = require("../prompter");
const variables_1 = require("../variables");
const getPackageUpgradeInput_1 = require("./getPackageUpgradeInput");
const packageUpgradeConfig_1 = require("./packageUpgradeConfig");
async function runPrompt(prompt, packageName) {
    if ((0, getPackageUpgradeInput_1.handlePackageUpgradeInput)(packageName, prompt.name))
        return;
    prompt = (0, variables_1.transformTextInObject)(prompt);
    let inputValue;
    switch (prompt.type) {
        case 'boolean':
            inputValue = await (0, prompter_1.confirm)(prompt.text, prompt);
            break;
        case 'multiselect':
            inputValue = await (0, prompter_1.multiselect)(prompt.text, prompt);
            break;
        default:
            inputValue = await (0, prompter_1.text)(prompt.text, {
                placeholder: prompt.placeholder,
                defaultValue: prompt.defaultValue,
                initialValue: prompt.initialValue,
                validate: getValidate(prompt.validate),
            });
            break;
    }
    variables_1.variables.set(prompt.name, inputValue);
    (0, packageUpgradeConfig_1.addPackageUpgradeInput)(packageName, prompt.name, inputValue);
}
exports.runPrompt = runPrompt;
function getValidate(validate) {
    if (!validate)
        return undefined;
    if (!Array.isArray(validate))
        validate = [validate];
    const _validate = validate;
    return (value) => {
        for (const { flags, regex, message } of _validate) {
            if (!new RegExp(regex, flags).test(value))
                return message;
        }
    };
}
exports.getValidate = getValidate;
