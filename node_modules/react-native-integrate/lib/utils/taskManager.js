"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.taskManager = void 0;
const app_delegate = __importStar(require("../tasks/appDelegateTask"));
const plist = __importStar(require("../tasks/plistTask"));
const build_gradle = __importStar(require("../tasks/buildGradleTask"));
const xcode = __importStar(require("../tasks/xcode/xcodeTask"));
const android_manifest = __importStar(require("../tasks/androidManifestTask"));
const strings_xml = __importStar(require("../tasks/stringsXmlTask"));
const podfile = __importStar(require("../tasks/podFileTask"));
const gitignore = __importStar(require("../tasks/gitignoreTask"));
const fs = __importStar(require("../tasks/fsTask"));
const json = __importStar(require("../tasks/jsonTask"));
const prompt = __importStar(require("../tasks/promptTask"));
const notification_service = __importStar(require("../tasks/notificationServiceTask"));
const notification_view_controller = __importStar(require("../tasks/notificationViewControllerTask"));
const main_application = __importStar(require("../tasks/mainApplicationTask"));
const main_activity = __importStar(require("../tasks/mainActivityTask"));
const settings_gradle = __importStar(require("../tasks/settingsGradleTask"));
const shell = __importStar(require("../tasks/shellTask"));
const babel_config = __importStar(require("../tasks/babelConfigTask"));
const task = {
    app_delegate,
    plist,
    build_gradle,
    xcode,
    android_manifest,
    podfile,
    gitignore,
    fs,
    json,
    prompt,
    notification_service,
    notification_view_controller,
    main_application,
    main_activity,
    settings_gradle,
    strings_xml,
    shell,
    babel_config,
};
const systemTaskTypes = Object.entries(task)
    .filter(x => x[1].isSystemTask)
    .map(x => x[0]);
function isSystemTask(task) {
    return systemTaskTypes.includes(task);
}
function getNonSystemTasks(steps) {
    return steps.filter(x => !isSystemTask(x.task));
}
exports.taskManager = {
    task,
    isSystemTask,
    getNonSystemTasks,
};
