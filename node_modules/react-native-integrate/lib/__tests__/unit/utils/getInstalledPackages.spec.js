"use strict";
/* eslint-disable @typescript-eslint/no-unsafe-call */
Object.defineProperty(exports, "__esModule", { value: true });
const { mockFs, writeMockProject } = require('../../mocks/mockAll');
const getInstalledPackages_1 = require("../../../utils/getInstalledPackages");
describe('getInstalledPackages', () => {
    it('should get installed packages', () => {
        const installedPackages = (0, getInstalledPackages_1.getInstalledPackages)();
        expect(installedPackages).toBeTruthy();
        expect(installedPackages).toContainEqual(['mock-package', '^1.2.3']);
    });
    it('should work with zero dependencies', () => {
        writeMockProject({
            name: 'mock-project',
            version: '0.0.0',
            description: 'Mock project',
        });
        const installedPackages = (0, getInstalledPackages_1.getInstalledPackages)();
        expect(installedPackages).toBeTruthy();
        expect(installedPackages).toEqual([]);
    });
    it('should return an empty array if there is no package.json', () => {
        mockFs.reset();
        // @ts-ignore
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        expect(() => {
            (0, getInstalledPackages_1.getInstalledPackages)();
        }).toThrowError('program aborted');
    });
});
